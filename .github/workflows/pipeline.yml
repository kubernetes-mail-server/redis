name: build and deploy container

on: 
  push:
    branches: [master]

env:
  CLUSTER_CONFIG: ${{ secrets.CLUSTER_CONFIG }}
  KUBECONFIG: kubeconfig
  NAME: redis
  NAMESPACE: mail-server
  REPLICAS: 1
  HELM: https://get.helm.sh/helm-v3.3.1-linux-amd64.tar.gz
  KUBECTL: https://storage.googleapis.com/kubernetes-release/release/v1.19.0/bin/linux/amd64/kubectl


jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Tools
        run: |
          echo "${GITHUB_WORKSPACE}" >> ${GITHUB_PATH}
          curl -L ${KUBECTL} -o ${GITHUB_WORKSPACE}/kubectl
          curl -L ${HELM} | tar xzO linux-amd64/helm > ${GITHUB_WORKSPACE}/helm
          chmod +x ${GITHUB_WORKSPACE}/helm ${GITHUB_WORKSPACE}/kubectl

      - name: Setup Kubeconfig
        run: |
          echo $PATH
          echo "${CLUSTER_CONFIG}" > ${GITHUB_WORKSPACE}/kubeconfig

      - name: Scale down
        run: | 
          kubectl get pods -n ${NAMESPACE}
          kubectl scale --replicas=0 -n ${NAMESPACE} deployment/${NAME} || true
          kubectl get deployments -n ${NAMESPACE}

      - name: Install
        run: | 
          helm template \
            --set name=${NAME} \
            --set namespace=${NAMESPACE} \
            --set port=$(kubectl get cm -n ${NAMESPACE} services-info -o=jsonpath="{.data.REDIS_PORT}") \
            ${GITHUB_WORKSPACE}/kubernetes | kubectl apply -f -

      - name: Scale up
        run: | 
          kubectl scale --replicas=${REPLICAS} -n ${NAMESPACE} deployment/${NAME}
          kubectl get deployments -n ${NAMESPACE}

